variables:
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  DOCKER_TLS_CERTDIR: "/certs"

  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

image: maven:3.6.3-openjdk-17

stages:
  - compile
  - test
  - build
  - deploy

cache:
  paths:
    - .m2/repository
    - target
  

compile:
  stage: compile
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - $CI_PROJECT_DIR

test:
  image: maven:3.6.3-openjdk-17
  stage: test
  script:
    - mvn verify $MAVEN_OPTS
    - cat target/site/jacoco/index.html | grep -o '<tfoot>.*</tfoot>'
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    paths:
      - target/site/jacoco/*
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
        - "**/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 hour
  only: 
    - master
    - staging

    
sonarcloud-check:
  stage: test
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey=wallet-wise_discovery-server
  only: 
    - master
    - staging

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - export  IMAGE_TAG=`if [ $CI_COMMIT_BRANCH == "staging" ]; then echo $CI_COMMIT_SHORT_SHA; else echo $CI_COMMIT_TAG; fi;` 
    - docker login -u "$CI_DOCKER_HUB_USER" -p "$CI_DOCKER_HUB_PASSWORD" $CI_DOCKER_HUB_URL
  script:
    - docker build -t "gervasioartur/wallet-wise_discovery-server:$IMAGE_TAG" .
    - docker push gervasioartur/wallet-wise_discovery-server:$IMAGE_TAG
  only: 
    - master
    - staging
  tags:
    - build
  
deploy:
  image: mcr.microsoft.com/azure-cli:latest
  stage: deploy
  before_script:
    - export  IMAGE_TAG=$CI_COMMIT_SHORT_SHA
    - az login --username $AZURE_USER --password $AZURE_PASSWORD
  script: 
    - az aks install-cli
    - kubectl
    - az aks get-credentials -n wallet-wise-dev-test -g wallet-wise-dev-test --admin
    - sed -i 's/<IMAGE_TAG>/'$IMAGE_TAG'/g' deployment.yml
    - kubectl apply -f deployment.yml
  only:
    - staging
  
  
